#version 420 core

//equal_spacing
//fractional_odd_spacing
//fractional_even_spacing
layout (triangles, fractional_odd_spacing, ccw) in;

out vec2 Tex;
out vec3 Pos;

uniform mat4 MatrWVP;

in int InId[];
in vec2 TexCoords[];

in vec2 InP0[];
in vec2 InP1[];
in vec2 InH0[];
in vec2 InH1[];

uniform sampler2D TextureHeight;
uniform float Height;

void main( void )
{
  vec4 pos =
    gl_in[0].gl_Position * gl_TessCoord.x +
    gl_in[1].gl_Position * gl_TessCoord.y +
    gl_in[2].gl_Position * gl_TessCoord.z;

  Tex =
    TexCoords[0] * gl_TessCoord.x +
    TexCoords[1] * gl_TessCoord.y +
    TexCoords[2] * gl_TessCoord.z;

  vec2 P0 = 
    InP0[0] * gl_TessCoord.x +
    InP0[1] * gl_TessCoord.y +
    InP0[2] * gl_TessCoord.z;
  vec2 P1 = 
    InP1[0] * gl_TessCoord.x +
    InP1[1] * gl_TessCoord.y +
    InP1[2] * gl_TessCoord.z;
  vec2 H0 = 
    InH0[0] * gl_TessCoord.x +
    InH0[1] * gl_TessCoord.y +
    InH0[2] * gl_TessCoord.z;
  vec2 H1 = 
    InH1[0] * gl_TessCoord.x +
    InH1[1] * gl_TessCoord.y +
    InH1[2] * gl_TessCoord.z;            

  if (!(InId[0] > 0 && gl_TessCoord.x == 1 ||
        InId[1] > 0 && gl_TessCoord.y == 1 ||
        InId[2] > 0 && gl_TessCoord.z == 1))
    pos = vec4(pos.x, texture2D(TextureHeight, Tex).a * Height, pos.z, 1);
  else
  {
    if (length(Tex - P1) < 0.00001)
    {
      float h1 = texture2D(TextureHeight, H1).a * Height;
      if (h1 > 1.5)
        h1 *= 0.95;
      pos = vec4(pos.x, h1, pos.z, 1);
    }
    else
    {
      float h0 = texture2D(TextureHeight, H0).a * Height, h1 = texture2D(TextureHeight, H1).a * Height;
      if (h0 > 1.5)
        h0 *= 0.95;
      if (h1 > 1.5)
        h1 *= 0.95;
      float alpha = length(Tex - P0) / length(Tex - P1);
      pos = vec4(pos.x, (h0 + alpha * h1) / (1.0 + alpha), pos.z, 1);
    }
  }

  Pos = pos.xyz;
  gl_Position = MatrWVP * pos;
}